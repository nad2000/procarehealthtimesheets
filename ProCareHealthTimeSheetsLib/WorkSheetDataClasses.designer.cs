#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoftwareAssociates.ProCareHealth
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TimeSheetDB")]
	public partial class WorkSheetDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertWeekDay(WeekDay instance);
    partial void UpdateWeekDay(WeekDay instance);
    partial void DeleteWeekDay(WeekDay instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertUserCompany(UserCompany instance);
    partial void UpdateUserCompany(UserCompany instance);
    partial void DeleteUserCompany(UserCompany instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertTimeSheetEntry(TimeSheetEntry instance);
    partial void UpdateTimeSheetEntry(TimeSheetEntry instance);
    partial void DeleteTimeSheetEntry(TimeSheetEntry instance);
    partial void InsertBreakType(BreakType instance);
    partial void UpdateBreakType(BreakType instance);
    partial void DeleteBreakType(BreakType instance);
    #endregion
		
		public WorkSheetDataClassesDataContext() : 
				base(global::SoftwareAssociates.ProCareHealth.Properties.Settings.Default.MainSqlConnection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkSheetDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkSheetDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkSheetDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkSheetDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<WeekDay> WeekDays
		{
			get
			{
				return this.GetTable<WeekDay>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<UserCompany> UserCompanies
		{
			get
			{
				return this.GetTable<UserCompany>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<TimeSheetEntry> TimeSheetEntries
		{
			get
			{
				return this.GetTable<TimeSheetEntry>();
			}
		}
		
		public System.Data.Linq.Table<BreakType> BreakTypes
		{
			get
			{
				return this.GetTable<BreakType>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserWeekTimeSheetEntriesGet")]
		public int UserWeekTimeSheetEntriesGet()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUserTimeSheetEntries")]
		public ISingleResult<GetUserTimeSheetEntriesResult> GetUserTimeSheetEntries([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(256)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WeekEndingDate", DbType="Date")] System.Nullable<System.DateTime> weekEndingDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, weekEndingDate);
			return ((ISingleResult<GetUserTimeSheetEntriesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetWeekEndingDates")]
		public ISingleResult<GetWeekEndingDatesResult> GetWeekEndingDates([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Count", DbType="TinyInt")] System.Nullable<byte> count)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), count);
			return ((ISingleResult<GetWeekEndingDatesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserTimeSheetEntry_Update")]
		public ISingleResult<UserTimeSheetEntry_UpdateResult> UserTimeSheetEntry_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="Date")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartedAt", DbType="Time")] System.Nullable<System.TimeSpan> startedAt, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndedAt", DbType="Time")] System.Nullable<System.TimeSpan> endedAt, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Break_Id", DbType="Int")] System.Nullable<int> break_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReportedBy_Id", DbType="Int")] System.Nullable<int> reportedBy_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, date, startedAt, endedAt, break_Id, reportedBy_Id);
			return ((ISingleResult<UserTimeSheetEntry_UpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.WeekEndingDates", IsComposable=true)]
		public IQueryable<WeekEndingDatesResult> WeekEndingDates([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Count", DbType="TinyInt")] System.Nullable<byte> count)
		{
			return this.CreateMethodCallQuery<WeekEndingDatesResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), count);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSummaryReport")]
		public ISingleResult<GetSummaryReportResult> GetSummaryReport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateFrom", DbType="Date")] System.Nullable<System.DateTime> dateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateTo", DbType="Date")] System.Nullable<System.DateTime> dateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(256)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateFrom, dateTo, userName);
			return ((ISingleResult<GetSummaryReportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTimeSheetSummary")]
		public ISingleResult<GetTimeSheetSummaryResult> GetTimeSheetSummary([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReportRequestedBy_Id", DbType="Int")] System.Nullable<int> reportRequestedBy_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateFrom", DbType="Date")] System.Nullable<System.DateTime> dateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateTo", DbType="Date")] System.Nullable<System.DateTime> dateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(256)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), reportRequestedBy_Id, dateFrom, dateTo, userName);
			return ((ISingleResult<GetTimeSheetSummaryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ThisWeekEndingDate", IsComposable=true)]
		public System.Nullable<System.DateTime> ThisWeekEndingDate()
		{
			return ((System.Nullable<System.DateTime>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LastWeekEndingDate", IsComposable=true)]
		public System.Nullable<System.DateTime> LastWeekEndingDate()
		{
			return ((System.Nullable<System.DateTime>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetFullTimeSheetRecords")]
		public ISingleResult<GetFullTimeSheetRecordsResult> GetFullTimeSheetRecords([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReportRequestedBy_Id", DbType="Int")] System.Nullable<int> reportRequestedBy_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateFrom", DbType="Date")] System.Nullable<System.DateTime> dateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateTo", DbType="Date")] System.Nullable<System.DateTime> dateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IncludeUnapproved", DbType="Bit")] System.Nullable<bool> includeUnapproved, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyId", DbType="Int")] System.Nullable<int> companyId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(256)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), reportRequestedBy_Id, dateFrom, dateTo, includeUnapproved, companyId, userName);
			return ((ISingleResult<GetFullTimeSheetRecordsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUserDataByUserName")]
		public ISingleResult<GetUserDataByUserNameResult> GetUserDataByUserName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(256)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName);
			return ((ISingleResult<GetUserDataByUserNameResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetApprovableUsers")]
		public ISingleResult<GetApprovableUsersResult> GetApprovableUsers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(256)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName);
			return ((ISingleResult<GetApprovableUsersResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ApproverTimeSheetEntry_Update")]
		public ISingleResult<ApproverTimeSheetEntry_UpdateResult> ApproverTimeSheetEntry_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="Date")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartedAt", DbType="Time")] System.Nullable<System.TimeSpan> startedAt, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndedAt", DbType="Time")] System.Nullable<System.TimeSpan> endedAt, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Break_Id", DbType="Int")] System.Nullable<int> break_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsApproved", DbType="Bit")] System.Nullable<bool> isApproved, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Comment", DbType="NVarChar(MAX)")] string comment, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerifiedBy_Id", DbType="Int")] System.Nullable<int> verifiedBy_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReportedBy_UserName", DbType="NVarChar(256)")] string reportedBy_UserName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, date, startedAt, endedAt, break_Id, isApproved, comment, verifiedBy_Id, reportedBy_UserName);
			return ((ISingleResult<ApproverTimeSheetEntry_UpdateResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeekDays")]
	public partial class WeekDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _WeekDay1;
		
		private System.Nullable<System.DateTime> _CurrentWeekDayDate;
		
		private string _WeekDayName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWeekDayNoChanging(byte value);
    partial void OnWeekDayNoChanged();
    partial void OnCurrentWeekDayDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCurrentWeekDayDateChanged();
    partial void OnWeekDayNameChanging(string value);
    partial void OnWeekDayNameChanged();
    #endregion
		
		public WeekDay()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="WeekDay", Storage="_WeekDay1", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte WeekDayNo
		{
			get
			{
				return this._WeekDay1;
			}
			set
			{
				if ((this._WeekDay1 != value))
				{
					this.OnWeekDayNoChanging(value);
					this.SendPropertyChanging();
					this._WeekDay1 = value;
					this.SendPropertyChanged("WeekDayNo");
					this.OnWeekDayNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentWeekDayDate", AutoSync=AutoSync.Always, DbType="Date", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CurrentWeekDayDate
		{
			get
			{
				return this._CurrentWeekDayDate;
			}
			set
			{
				if ((this._CurrentWeekDayDate != value))
				{
					this.OnCurrentWeekDayDateChanging(value);
					this.SendPropertyChanging();
					this._CurrentWeekDayDate = value;
					this.SendPropertyChanged("CurrentWeekDayDate");
					this.OnCurrentWeekDayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekDayName", AutoSync=AutoSync.Always, DbType="NVarChar(30)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string WeekDayName
		{
			get
			{
				return this._WeekDayName;
			}
			set
			{
				if ((this._WeekDayName != value))
				{
					this.OnWeekDayNameChanging(value);
					this.SendPropertyChanging();
					this._WeekDayName = value;
					this.SendPropertyChanged("WeekDayName");
					this.OnWeekDayNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Companies")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private EntitySet<UserCompany> _UserCompanies;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Company()
		{
			this._UserCompanies = new EntitySet<UserCompany>(new Action<UserCompany>(this.attach_UserCompanies), new Action<UserCompany>(this.detach_UserCompanies));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_UserCompany", Storage="_UserCompanies", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<UserCompany> UserCompanies
		{
			get
			{
				return this._UserCompanies;
			}
			set
			{
				this._UserCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_User", Storage="_Users", ThisKey="Id", OtherKey="CompanyWorkingFor_Id")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserCompanies(UserCompany entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_UserCompanies(UserCompany entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserCompany")]
	public partial class UserCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UsersVerifyingTimeSheets_Id;
		
		private int _Companies_Id;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsersVerifyingTimeSheets_IdChanging(int value);
    partial void OnUsersVerifyingTimeSheets_IdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    #endregion
		
		public UserCompany()
		{
			this._Company = default(EntityRef<Company>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersVerifyingTimeSheets_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UsersVerifyingTimeSheets_Id
		{
			get
			{
				return this._UsersVerifyingTimeSheets_Id;
			}
			set
			{
				if ((this._UsersVerifyingTimeSheets_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsersVerifyingTimeSheets_IdChanging(value);
					this.SendPropertyChanging();
					this._UsersVerifyingTimeSheets_Id = value;
					this.SendPropertyChanged("UsersVerifyingTimeSheets_Id");
					this.OnUsersVerifyingTimeSheets_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Companies_Id", Storage="_Companies_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CompanyId
		{
			get
			{
				return this._Companies_Id;
			}
			set
			{
				if ((this._Companies_Id != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._Companies_Id = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_UserCompany", Storage="_Company", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.UserCompanies.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.UserCompanies.Add(this);
						this._Companies_Id = value.Id;
					}
					else
					{
						this._Companies_Id = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserCompany", Storage="_User", ThisKey="UsersVerifyingTimeSheets_Id", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserCompanies.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserCompanies.Add(this);
						this._UsersVerifyingTimeSheets_Id = value.Id;
					}
					else
					{
						this._UsersVerifyingTimeSheets_Id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Email;
		
		private System.Nullable<int> _CompanyWorkingFor_Id;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _Code;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _FullName;
		
		private EntitySet<UserCompany> _UserCompanies;
		
		private EntitySet<TimeSheetEntry> _TimeSheetEntries;
		
		private EntitySet<TimeSheetEntry> _TimeSheetEntries1;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCompanyWorkingFor_IdChanging(System.Nullable<int> value);
    partial void OnCompanyWorkingFor_IdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    #endregion
		
		public User()
		{
			this._UserCompanies = new EntitySet<UserCompany>(new Action<UserCompany>(this.attach_UserCompanies), new Action<UserCompany>(this.detach_UserCompanies));
			this._TimeSheetEntries = new EntitySet<TimeSheetEntry>(new Action<TimeSheetEntry>(this.attach_TimeSheetEntries), new Action<TimeSheetEntry>(this.detach_TimeSheetEntries));
			this._TimeSheetEntries1 = new EntitySet<TimeSheetEntry>(new Action<TimeSheetEntry>(this.attach_TimeSheetEntries1), new Action<TimeSheetEntry>(this.detach_TimeSheetEntries1));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyWorkingFor_Id", DbType="Int")]
		public System.Nullable<int> CompanyWorkingFor_Id
		{
			get
			{
				return this._CompanyWorkingFor_Id;
			}
			set
			{
				if ((this._CompanyWorkingFor_Id != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyWorkingFor_IdChanging(value);
					this.SendPropertyChanging();
					this._CompanyWorkingFor_Id = value;
					this.SendPropertyChanged("CompanyWorkingFor_Id");
					this.OnCompanyWorkingFor_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", AutoSync=AutoSync.Always, DbType="NVarChar(256)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", AutoSync=AutoSync.Always, DbType="NVarChar(201)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserCompany", Storage="_UserCompanies", ThisKey="Id", OtherKey="UsersVerifyingTimeSheets_Id")]
		public EntitySet<UserCompany> UserCompanies
		{
			get
			{
				return this._UserCompanies;
			}
			set
			{
				this._UserCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TimeSheetEntry", Storage="_TimeSheetEntries", ThisKey="Id", OtherKey="VerifiedBy_Id")]
		public EntitySet<TimeSheetEntry> TimeSheetEntries
		{
			get
			{
				return this._TimeSheetEntries;
			}
			set
			{
				this._TimeSheetEntries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TimeSheetEntry1", Storage="_TimeSheetEntries1", ThisKey="Id", OtherKey="ReportedBy_Id")]
		public EntitySet<TimeSheetEntry> TimeSheetEntries1
		{
			get
			{
				return this._TimeSheetEntries1;
			}
			set
			{
				this._TimeSheetEntries1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_User", Storage="_Company", ThisKey="CompanyWorkingFor_Id", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._CompanyWorkingFor_Id = value.Id;
					}
					else
					{
						this._CompanyWorkingFor_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserCompanies(UserCompany entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserCompanies(UserCompany entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TimeSheetEntries(TimeSheetEntry entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TimeSheetEntries(TimeSheetEntry entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TimeSheetEntries1(TimeSheetEntry entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_TimeSheetEntries1(TimeSheetEntry entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeSheetEntries")]
	public partial class TimeSheetEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private System.TimeSpan _StartedAt;
		
		private System.TimeSpan _EndedAt;
		
		private System.Nullable<bool> _IsApproved;
		
		private string _Comment;
		
		private System.Nullable<short> _Break_Id;
		
		private int _ReportedBy_Id;
		
		private System.Nullable<int> _VerifiedBy_Id;
		
		private System.Nullable<short> _BreakLength;
		
		private System.Nullable<int> _TotalTime;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<BreakType> _BreakType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnStartedAtChanging(System.TimeSpan value);
    partial void OnStartedAtChanged();
    partial void OnEndedAtChanging(System.TimeSpan value);
    partial void OnEndedAtChanged();
    partial void OnIsApprovedChanging(System.Nullable<bool> value);
    partial void OnIsApprovedChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnBreak_IdChanging(System.Nullable<short> value);
    partial void OnBreak_IdChanged();
    partial void OnReportedBy_IdChanging(int value);
    partial void OnReportedBy_IdChanged();
    partial void OnVerifiedBy_IdChanging(System.Nullable<int> value);
    partial void OnVerifiedBy_IdChanged();
    partial void OnBreakLengthChanging(System.Nullable<short> value);
    partial void OnBreakLengthChanged();
    partial void OnTotalTimeChanging(System.Nullable<int> value);
    partial void OnTotalTimeChanged();
    #endregion
		
		public TimeSheetEntry()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._BreakType = default(EntityRef<BreakType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartedAt", DbType="Time NOT NULL")]
		public System.TimeSpan StartedAt
		{
			get
			{
				return this._StartedAt;
			}
			set
			{
				if ((this._StartedAt != value))
				{
					this.OnStartedAtChanging(value);
					this.SendPropertyChanging();
					this._StartedAt = value;
					this.SendPropertyChanged("StartedAt");
					this.OnStartedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndedAt", DbType="Time NOT NULL")]
		public System.TimeSpan EndedAt
		{
			get
			{
				return this._EndedAt;
			}
			set
			{
				if ((this._EndedAt != value))
				{
					this.OnEndedAtChanging(value);
					this.SendPropertyChanging();
					this._EndedAt = value;
					this.SendPropertyChanged("EndedAt");
					this.OnEndedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit")]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Break_Id", DbType="SmallInt")]
		public System.Nullable<short> Break_Id
		{
			get
			{
				return this._Break_Id;
			}
			set
			{
				if ((this._Break_Id != value))
				{
					if (this._BreakType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBreak_IdChanging(value);
					this.SendPropertyChanging();
					this._Break_Id = value;
					this.SendPropertyChanged("Break_Id");
					this.OnBreak_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportedBy_Id", DbType="Int NOT NULL")]
		public int ReportedBy_Id
		{
			get
			{
				return this._ReportedBy_Id;
			}
			set
			{
				if ((this._ReportedBy_Id != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportedBy_IdChanging(value);
					this.SendPropertyChanging();
					this._ReportedBy_Id = value;
					this.SendPropertyChanged("ReportedBy_Id");
					this.OnReportedBy_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifiedBy_Id", DbType="Int")]
		public System.Nullable<int> VerifiedBy_Id
		{
			get
			{
				return this._VerifiedBy_Id;
			}
			set
			{
				if ((this._VerifiedBy_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVerifiedBy_IdChanging(value);
					this.SendPropertyChanging();
					this._VerifiedBy_Id = value;
					this.SendPropertyChanged("VerifiedBy_Id");
					this.OnVerifiedBy_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakLength", DbType="SmallInt")]
		public System.Nullable<short> BreakLength
		{
			get
			{
				return this._BreakLength;
			}
			set
			{
				if ((this._BreakLength != value))
				{
					this.OnBreakLengthChanging(value);
					this.SendPropertyChanging();
					this._BreakLength = value;
					this.SendPropertyChanged("BreakLength");
					this.OnBreakLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTime", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TotalTime
		{
			get
			{
				return this._TotalTime;
			}
			set
			{
				if ((this._TotalTime != value))
				{
					this.OnTotalTimeChanging(value);
					this.SendPropertyChanging();
					this._TotalTime = value;
					this.SendPropertyChanged("TotalTime");
					this.OnTotalTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TimeSheetEntry", Storage="_User", ThisKey="VerifiedBy_Id", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TimeSheetEntries.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TimeSheetEntries.Add(this);
						this._VerifiedBy_Id = value.Id;
					}
					else
					{
						this._VerifiedBy_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TimeSheetEntry1", Storage="_User1", ThisKey="ReportedBy_Id", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.TimeSheetEntries1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.TimeSheetEntries1.Add(this);
						this._ReportedBy_Id = value.Id;
					}
					else
					{
						this._ReportedBy_Id = default(int);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BreakType_TimeSheetEntry", Storage="_BreakType", ThisKey="Break_Id", OtherKey="Id", IsForeignKey=true, DeleteRule="SET NULL")]
		public BreakType BreakType
		{
			get
			{
				return this._BreakType.Entity;
			}
			set
			{
				BreakType previousValue = this._BreakType.Entity;
				if (((previousValue != value) 
							|| (this._BreakType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BreakType.Entity = null;
						previousValue.TimeSheetEntries.Remove(this);
					}
					this._BreakType.Entity = value;
					if ((value != null))
					{
						value.TimeSheetEntries.Add(this);
						this._Break_Id = value.Id;
					}
					else
					{
						this._Break_Id = default(Nullable<short>);
					}
					this.SendPropertyChanged("BreakType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BreakTypes")]
	public partial class BreakType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Id;
		
		private string _Code;
		
		private string _AlternateCode;
		
		private string _Name;
		
		private int _TimeValue;
		
		private EntitySet<TimeSheetEntry> _TimeSheetEntries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(short value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnAlternateCodeChanging(string value);
    partial void OnAlternateCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTimeValueChanging(int value);
    partial void OnTimeValueChanged();
    #endregion
		
		public BreakType()
		{
			this._TimeSheetEntries = new EntitySet<TimeSheetEntry>(new Action<TimeSheetEntry>(this.attach_TimeSheetEntries), new Action<TimeSheetEntry>(this.detach_TimeSheetEntries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateCode", DbType="VarChar(10)")]
		public string AlternateCode
		{
			get
			{
				return this._AlternateCode;
			}
			set
			{
				if ((this._AlternateCode != value))
				{
					this.OnAlternateCodeChanging(value);
					this.SendPropertyChanging();
					this._AlternateCode = value;
					this.SendPropertyChanged("AlternateCode");
					this.OnAlternateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeValue", DbType="Int NOT NULL")]
		public int TimeValue
		{
			get
			{
				return this._TimeValue;
			}
			set
			{
				if ((this._TimeValue != value))
				{
					this.OnTimeValueChanging(value);
					this.SendPropertyChanging();
					this._TimeValue = value;
					this.SendPropertyChanged("TimeValue");
					this.OnTimeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BreakType_TimeSheetEntry", Storage="_TimeSheetEntries", ThisKey="Id", OtherKey="Break_Id")]
		public EntitySet<TimeSheetEntry> TimeSheetEntries
		{
			get
			{
				return this._TimeSheetEntries;
			}
			set
			{
				this._TimeSheetEntries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TimeSheetEntries(TimeSheetEntry entity)
		{
			this.SendPropertyChanging();
			entity.BreakType = this;
		}
		
		private void detach_TimeSheetEntries(TimeSheetEntry entity)
		{
			this.SendPropertyChanging();
			entity.BreakType = null;
		}
	}
	
	public partial class GetUserTimeSheetEntriesResult
	{
		
		private System.Nullable<int> _Id;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<System.TimeSpan> _StartedAt;
		
		private System.Nullable<System.TimeSpan> _EndedAt;
		
		private System.Nullable<bool> _IsApproved;
		
		private string _Comment;
		
		private System.Nullable<int> _TotalTime;
		
		private System.Nullable<int> _Break_Id;
		
		private string _BreakName;
		
		private System.Nullable<int> _ReportedBy_Id;
		
		private System.Nullable<int> _VerifiedBy_Id;
		
		public GetUserTimeSheetEntriesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int")]
		public System.Nullable<int> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartedAt", DbType="Time")]
		public System.Nullable<System.TimeSpan> StartedAt
		{
			get
			{
				return this._StartedAt;
			}
			set
			{
				if ((this._StartedAt != value))
				{
					this._StartedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndedAt", DbType="Time")]
		public System.Nullable<System.TimeSpan> EndedAt
		{
			get
			{
				return this._EndedAt;
			}
			set
			{
				if ((this._EndedAt != value))
				{
					this._EndedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit")]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this._IsApproved = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTime", DbType="Int")]
		public System.Nullable<int> TotalTime
		{
			get
			{
				return this._TotalTime;
			}
			set
			{
				if ((this._TotalTime != value))
				{
					this._TotalTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Break_Id", DbType="Int")]
		public System.Nullable<int> Break_Id
		{
			get
			{
				return this._Break_Id;
			}
			set
			{
				if ((this._Break_Id != value))
				{
					this._Break_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakName", DbType="NVarChar(100)")]
		public string BreakName
		{
			get
			{
				return this._BreakName;
			}
			set
			{
				if ((this._BreakName != value))
				{
					this._BreakName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportedBy_Id", DbType="Int")]
		public System.Nullable<int> ReportedBy_Id
		{
			get
			{
				return this._ReportedBy_Id;
			}
			set
			{
				if ((this._ReportedBy_Id != value))
				{
					this._ReportedBy_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifiedBy_Id", DbType="Int")]
		public System.Nullable<int> VerifiedBy_Id
		{
			get
			{
				return this._VerifiedBy_Id;
			}
			set
			{
				if ((this._VerifiedBy_Id != value))
				{
					this._VerifiedBy_Id = value;
				}
			}
		}
	}
	
	public partial class GetWeekEndingDatesResult
	{
		
		private System.Nullable<System.DateTime> _WeekEndingDate;
		
		public GetWeekEndingDatesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekEndingDate", DbType="Date")]
		public System.Nullable<System.DateTime> WeekEndingDate
		{
			get
			{
				return this._WeekEndingDate;
			}
			set
			{
				if ((this._WeekEndingDate != value))
				{
					this._WeekEndingDate = value;
				}
			}
		}
	}
	
	public partial class UserTimeSheetEntry_UpdateResult
	{
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private System.TimeSpan _StartedAt;
		
		private System.TimeSpan _EndedAt;
		
		private System.Nullable<bool> _IsApproved;
		
		private string _Comment;
		
		private int _Break_Id;
		
		private int _ReportedBy_Id;
		
		private System.Nullable<int> _VerifiedBy_Id;
		
		private System.Nullable<short> _BreakLength;
		
		private System.Nullable<int> _TotalTime;
		
		public UserTimeSheetEntry_UpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartedAt", DbType="Time NOT NULL")]
		public System.TimeSpan StartedAt
		{
			get
			{
				return this._StartedAt;
			}
			set
			{
				if ((this._StartedAt != value))
				{
					this._StartedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndedAt", DbType="Time NOT NULL")]
		public System.TimeSpan EndedAt
		{
			get
			{
				return this._EndedAt;
			}
			set
			{
				if ((this._EndedAt != value))
				{
					this._EndedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit")]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this._IsApproved = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Break_Id", DbType="Int NOT NULL")]
		public int Break_Id
		{
			get
			{
				return this._Break_Id;
			}
			set
			{
				if ((this._Break_Id != value))
				{
					this._Break_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportedBy_Id", DbType="Int NOT NULL")]
		public int ReportedBy_Id
		{
			get
			{
				return this._ReportedBy_Id;
			}
			set
			{
				if ((this._ReportedBy_Id != value))
				{
					this._ReportedBy_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifiedBy_Id", DbType="Int")]
		public System.Nullable<int> VerifiedBy_Id
		{
			get
			{
				return this._VerifiedBy_Id;
			}
			set
			{
				if ((this._VerifiedBy_Id != value))
				{
					this._VerifiedBy_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakLength", DbType="SmallInt")]
		public System.Nullable<short> BreakLength
		{
			get
			{
				return this._BreakLength;
			}
			set
			{
				if ((this._BreakLength != value))
				{
					this._BreakLength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTime", DbType="Int")]
		public System.Nullable<int> TotalTime
		{
			get
			{
				return this._TotalTime;
			}
			set
			{
				if ((this._TotalTime != value))
				{
					this._TotalTime = value;
				}
			}
		}
	}
	
	public partial class WeekEndingDatesResult
	{
		
		private System.Nullable<System.DateTime> _WeekEndingDate;
		
		public WeekEndingDatesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekEndingDate", DbType="Date")]
		public System.Nullable<System.DateTime> WeekEndingDate
		{
			get
			{
				return this._WeekEndingDate;
			}
			set
			{
				if ((this._WeekEndingDate != value))
				{
					this._WeekEndingDate = value;
				}
			}
		}
	}
	
	public partial class GetSummaryReportResult
	{
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _ApprovedTotalTime;
		
		private System.Nullable<int> _NotApprovedTotalTime;
		
		private System.Nullable<int> _ApprovedTotalBreakTime;
		
		private System.Nullable<int> _NotApprovedTotalBreakTime;
		
		private string _Comments;
		
		public GetSummaryReportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedTotalTime", DbType="Int")]
		public System.Nullable<int> ApprovedTotalTime
		{
			get
			{
				return this._ApprovedTotalTime;
			}
			set
			{
				if ((this._ApprovedTotalTime != value))
				{
					this._ApprovedTotalTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotApprovedTotalTime", DbType="Int")]
		public System.Nullable<int> NotApprovedTotalTime
		{
			get
			{
				return this._NotApprovedTotalTime;
			}
			set
			{
				if ((this._NotApprovedTotalTime != value))
				{
					this._NotApprovedTotalTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedTotalBreakTime", DbType="Int")]
		public System.Nullable<int> ApprovedTotalBreakTime
		{
			get
			{
				return this._ApprovedTotalBreakTime;
			}
			set
			{
				if ((this._ApprovedTotalBreakTime != value))
				{
					this._ApprovedTotalBreakTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotApprovedTotalBreakTime", DbType="Int")]
		public System.Nullable<int> NotApprovedTotalBreakTime
		{
			get
			{
				return this._NotApprovedTotalBreakTime;
			}
			set
			{
				if ((this._NotApprovedTotalBreakTime != value))
				{
					this._NotApprovedTotalBreakTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this._Comments = value;
				}
			}
		}
	}
	
	public partial class GetTimeSheetSummaryResult
	{
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _ApprovedTotalTime;
		
		private System.Nullable<int> _NotApprovedTotalTime;
		
		private System.Nullable<int> _ApprovedTotalBreakTime;
		
		private System.Nullable<int> _NotApprovedTotalBreakTime;
		
		private string _Comments;
		
		public GetTimeSheetSummaryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedTotalTime", DbType="Int")]
		public System.Nullable<int> ApprovedTotalTime
		{
			get
			{
				return this._ApprovedTotalTime;
			}
			set
			{
				if ((this._ApprovedTotalTime != value))
				{
					this._ApprovedTotalTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotApprovedTotalTime", DbType="Int")]
		public System.Nullable<int> NotApprovedTotalTime
		{
			get
			{
				return this._NotApprovedTotalTime;
			}
			set
			{
				if ((this._NotApprovedTotalTime != value))
				{
					this._NotApprovedTotalTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedTotalBreakTime", DbType="Int")]
		public System.Nullable<int> ApprovedTotalBreakTime
		{
			get
			{
				return this._ApprovedTotalBreakTime;
			}
			set
			{
				if ((this._ApprovedTotalBreakTime != value))
				{
					this._ApprovedTotalBreakTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotApprovedTotalBreakTime", DbType="Int")]
		public System.Nullable<int> NotApprovedTotalBreakTime
		{
			get
			{
				return this._NotApprovedTotalBreakTime;
			}
			set
			{
				if ((this._NotApprovedTotalBreakTime != value))
				{
					this._NotApprovedTotalBreakTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this._Comments = value;
				}
			}
		}
	}
	
	public partial class GetFullTimeSheetRecordsResult
	{
		
		private int _Id;
		
		private int _UserId;
		
		private string _Code;
		
		private string _FullName;
		
		private System.DateTime _Date;
		
		private System.TimeSpan _StartedAt;
		
		private System.TimeSpan _EndedAt;
		
		private System.Nullable<short> _Break_Id;
		
		private string _BreakTypeName;
		
		private System.Nullable<int> _TotalTime;
		
		private System.Nullable<bool> _IsApproved;
		
		public GetFullTimeSheetRecordsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(201)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartedAt", DbType="Time NOT NULL")]
		public System.TimeSpan StartedAt
		{
			get
			{
				return this._StartedAt;
			}
			set
			{
				if ((this._StartedAt != value))
				{
					this._StartedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndedAt", DbType="Time NOT NULL")]
		public System.TimeSpan EndedAt
		{
			get
			{
				return this._EndedAt;
			}
			set
			{
				if ((this._EndedAt != value))
				{
					this._EndedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Break_Id", DbType="SmallInt")]
		public System.Nullable<short> Break_Id
		{
			get
			{
				return this._Break_Id;
			}
			set
			{
				if ((this._Break_Id != value))
				{
					this._Break_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakTypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BreakTypeName
		{
			get
			{
				return this._BreakTypeName;
			}
			set
			{
				if ((this._BreakTypeName != value))
				{
					this._BreakTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTime", DbType="Int")]
		public System.Nullable<int> TotalTime
		{
			get
			{
				return this._TotalTime;
			}
			set
			{
				if ((this._TotalTime != value))
				{
					this._TotalTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit")]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this._IsApproved = value;
				}
			}
		}
	}
	
	public partial class GetUserDataByUserNameResult
	{
		
		private int _Id;
		
		private string _Code;
		
		private string _UserName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _FullName;
		
		private string _Email;
		
		private string _CompanyCode;
		
		private string _CompanyName;
		
		public GetUserDataByUserNameResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(201)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="VarChar(10)")]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this._CompanyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
	}
	
	public partial class GetApprovableUsersResult
	{
		
		private int _Id;
		
		private string _Email;
		
		private string _FullName;
		
		private string _UserName;
		
		public GetApprovableUsersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(201)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
	}
	
	public partial class ApproverTimeSheetEntry_UpdateResult
	{
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private System.TimeSpan _StartedAt;
		
		private System.TimeSpan _EndedAt;
		
		private System.Nullable<bool> _IsApproved;
		
		private string _Comment;
		
		private System.Nullable<short> _Break_Id;
		
		private int _ReportedBy_Id;
		
		private System.Nullable<int> _VerifiedBy_Id;
		
		private System.Nullable<short> _BreakLength;
		
		private System.Nullable<int> _TotalTime;
		
		public ApproverTimeSheetEntry_UpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartedAt", DbType="Time NOT NULL")]
		public System.TimeSpan StartedAt
		{
			get
			{
				return this._StartedAt;
			}
			set
			{
				if ((this._StartedAt != value))
				{
					this._StartedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndedAt", DbType="Time NOT NULL")]
		public System.TimeSpan EndedAt
		{
			get
			{
				return this._EndedAt;
			}
			set
			{
				if ((this._EndedAt != value))
				{
					this._EndedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit")]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this._IsApproved = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Break_Id", DbType="SmallInt")]
		public System.Nullable<short> Break_Id
		{
			get
			{
				return this._Break_Id;
			}
			set
			{
				if ((this._Break_Id != value))
				{
					this._Break_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportedBy_Id", DbType="Int NOT NULL")]
		public int ReportedBy_Id
		{
			get
			{
				return this._ReportedBy_Id;
			}
			set
			{
				if ((this._ReportedBy_Id != value))
				{
					this._ReportedBy_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifiedBy_Id", DbType="Int")]
		public System.Nullable<int> VerifiedBy_Id
		{
			get
			{
				return this._VerifiedBy_Id;
			}
			set
			{
				if ((this._VerifiedBy_Id != value))
				{
					this._VerifiedBy_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakLength", DbType="SmallInt")]
		public System.Nullable<short> BreakLength
		{
			get
			{
				return this._BreakLength;
			}
			set
			{
				if ((this._BreakLength != value))
				{
					this._BreakLength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTime", DbType="Int")]
		public System.Nullable<int> TotalTime
		{
			get
			{
				return this._TotalTime;
			}
			set
			{
				if ((this._TotalTime != value))
				{
					this._TotalTime = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
